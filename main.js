!function(){"use strict";var e={407:function(e,t,n){e.exports=n.p+"c75819857ff1599f0c50.svg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.p="",function(){var e=n(407);function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._imageLink=t.link,this._likesArray=t.likesArray?t.likesArray:[],this._template=t.template,this._handleCardClick=t.handleCardClick,this._handleCardDelete=t.handleCardDelete,this._ownerId=t.ownerId,this._cardId=t.cardId,this._handleLikeButton=t.handleLikeButton,this._currentId=t.currentId}var n,r;return n=e,(r=[{key:"_setEventListeners",value:function(){var e=this;this._cardElement.querySelector(".card__heart").addEventListener("click",(function(t){return e._handleLikeButton(t,e._likesArray)})),this._cardElement.querySelector(".card__image").addEventListener("click",(function(t){return e._handleCardClick(t)})),this._ownerId===this._currentId&&this._cardElement.querySelector(".card__delete").addEventListener("click",(function(t){return e._handleCardDelete(e._cardId,t)}))}},{key:"generateCard",value:function(){var e=document.querySelector(this._template).content;return this._cardElement=e.querySelector(".card").cloneNode(!0),this._cardElement.id=this._cardId,this._ownerId!==this._currentId&&this._cardElement.querySelector(".card__delete").remove(),this._checkIsLiked()&&this._cardElement.querySelector(".card__heart").classList.add("card__heart_active"),this._cardElement.querySelector(".card__image").src=this._imageLink,this._cardElement.querySelector(".card__image").alt="photo of ".concat(this._name),this._cardElement.querySelector(".card__name").textContent=this._name,this._cardElement.querySelector(".card__like-number").textContent=this._likesArray.length,this._setEventListeners(this._cardElement),this._cardElement}},{key:"updateLikes",value:function(e){this._likesArray=e,this._cardElement.querySelector(".card__like-number").textContent=this._likesArray.length}},{key:"getLikes",value:function(){return this._likesArray}},{key:"getCardId",value:function(){return this._cardId}},{key:"_checkIsLiked",value:function(){var e=this,t=!1;return this._likesArray.forEach((function(n){n._id===e._currentId&&(t=!0)})),t}},{key:"renderLikes",value:function(e,t,n){this.updateLikes(t),this._checkIsLiked()?e.target.classList.add("card__heart_active"):e.target.classList.remove("card__heart_active")}}])&&t(n.prototype,r),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then((function(t){return e._getResponseData(t)}))}},{key:"postCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}},{key:"makeLike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}},{key:"makeUnlike",value:function(e){var t=this;return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}},{key:"changeProfilePicture",value:function(e){var t=this,n=e.picture;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:n})}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}},{key:"setUserInfo",value:function(e){var t=this,n=e.name,r=e.profession;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._getResponseData(e)})).then((function(e){return e}))}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._sectionSelector=n,this._cardsSection=document.querySelector(this._sectionSelector)}var t,n;return t=e,(n=[{key:"renderer",value:function(){var e=this;this._items.forEach((function(t){return e.addItem(e._renderer(t))}))}},{key:"addItem",value:function(e){this._cardsSection.append(e)}},{key:"prependItem",value:function(e){this._cardsSection.prepend(e)}}])&&a(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._form=n,this._inputList=Array.from(n.querySelectorAll(this._settings.inputSelector)),this._buttonElement=n.querySelector(this._settings.submitButtonSelector)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._setEventListeners(),this._toggleButtonState()}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkIfValid(t),e._toggleButtonState()}))}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_checkIfValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._form.querySelector("#".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.textContent=""}},{key:"resetFormValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&u(t.prototype,n),e}();function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popupElement=document.querySelector(this._popupSelector),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.remove("popup_disable"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.add("popup_disable"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.querySelector(".popup__close-button").addEventListener("click",(function(t){return e.close()})),this._popupElement.addEventListener("click",(function(t){t.target.classList.contains("popup")&&e.close()}))}}])&&l(t.prototype,n),e}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},_(e,t,n||e)}function y(e,t){return y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},y(e,t)}function m(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(r);if(o){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function a(){return h(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){_(v(a.prototype),"open",this).call(this);var t=e.target.closest(".card__image-container").nextElementSibling.firstElementChild.textContent;this._popupElement.querySelector(".big-screen-image__image").src=e.target.src,this._popupElement.querySelector(".big-screen-image__image").alt="photo of ".concat(t),this._popupElement.querySelector(".big-screen-image__name").textContent=t}}])&&d(t.prototype,n),a}(f);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e,t,n){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},E(e,t,n||e)}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function C(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._handleSubmit=t,r._resetForm=n,r._inputList=r._popupElement.querySelectorAll(".popup__text-input"),r}return t=a,(n=[{key:"getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;E(I(a.prototype),"setEventListeners",this).call(this),this._popupElement.querySelector(".popup__form").addEventListener("submit",(function(t){return e._handleSubmit(t)}))}},{key:"close",value:function(){E(I(a.prototype),"close",this).call(this),this._popupElement.querySelector(".popup__form").reset()}},{key:"setInputValues",value:function(e){this._inputList.forEach((function(t){e[t.name]&&(t.value=e[t.name])}))}},{key:"getFormElement",value:function(){return document.querySelector(this._popupSelector)}},{key:"setCardId",value:function(e){this._cardId=e}},{key:"getCardId",value:function(){return this._cardId}}])&&k(t.prototype,n),a}(f);function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){var n=t.nameSelector,r=t.professionSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=n,this._professionSelector=r,this._nameProfile=document.querySelector(this._nameSelector),this._professionProfile=document.querySelector(this._professionSelector)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameProfile.textContent,profession:this._professionProfile.textContent,id:this._id}}},{key:"setUserInfo",value:function(e){this._name=e.name,this._profession=e.about,this._nameProfile.textContent=e.name,this._professionProfile.textContent=e.about,this._id=e._id}}])&&L(t.prototype,n),e}(),O=document.getElementById("around-the-us-logo"),P=document.getElementById("Jacques-Cousteau-image"),x={formSelector:".popup__form",inputSelector:".popup__text-input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__text-input_type_error"},j=document.querySelector(".popup_content_profile-edit"),R=document.querySelector(".profile__edit-button"),U=j.querySelector(".popup__form"),D=(j.querySelector(".popup__text-input_content_name"),j.querySelector(".popup__text-input_content_profession"),document.querySelector(".profile__add-button")),B=document.querySelector(".popup_content_add-place"),T=B.querySelector(".popup__form"),A=(B.querySelector(".popup__text-input_content_place-name"),B.querySelector(".popup__text-input_content_link"),document.querySelector(".profile__avatar")),V=document.querySelector(".popup_content_change-profile-picture").querySelector(".popup__form");O.src=e;var F=new i({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"f89c2be6-d7fd-45c3-96d0-689f19661cba","Content-Type":"application/json"}}),J=new w(".popup_content_delete"),N=new b(".popup_content_big-screen-image");N.setEventListeners();var H=new w(".popup_content_profile-edit",(function(e){e.preventDefault(),H.getFormElement().querySelector(".popup__save-button").textContent="Save...";var t=H.getInputValues();F.setUserInfo({name:t.name,profession:t.profession}).then((function(){K.setUserInfo({name:t.name,about:t.profession})})).catch((function(e){console.log(e)})).finally((function(){H.close(),H.getFormElement().querySelector(".popup__save-button").textContent="Save"}))}));H.setEventListeners();var z=new w(".popup_content_add-place",(function(e){e.preventDefault(),z.getFormElement().querySelector(".popup__save-button").textContent="Create...";var t=z.getInputValues(),n={};n.name=t["place-name"],n.link=t.link,F.postCard(n).then((function(e){n.ownerId=e.owner._id,n.cardId=e._id,ee.prependItem($(n))})).catch((function(e){console.log(e)})).finally((function(){z.close(),z.getFormElement().querySelector(".popup__save-button").textContent="Create"}))}));z.setEventListeners();var M=new w(".popup_content_delete",(function(e){e.preventDefault(),console.log(J.getCardId()),F.deleteCard(J.getCardId()).then((function(){document.querySelectorAll(".card").forEach((function(e){e.id===J.getCardId()&&e.remove()}))})).catch((function(e){console.log(e)})).finally((function(){return M.close()}))}));M.setEventListeners();var G=new w(".popup_content_change-profile-picture",(function(e){e.preventDefault(),G.getFormElement().querySelector(".popup__save-button").textContent="Save...",F.changeProfilePicture(G.getInputValues()).then((function(){return X()})).catch((function(e){console.log(e)})).finally((function(){G.close(),G.getFormElement().querySelector(".popup__save-button").textContent="Save"}))}));G.setEventListeners();var K=new q({nameSelector:".profile__name",professionSelector:".profile__proffesion"}),Q=new s(x,U),W=new s(x,T);function X(){F.getUserInfo().then((function(e){K.setUserInfo(e),P.src=e.avatar,P.alt="profile photo"})).catch((function(e){console.log(e)}))}function Y(e,t){J.open(),J.setCardId(e)}function Z(e,t){var n=this;this._checkIsLiked()?F.makeUnlike(this.getCardId()).then((function(t){return n.renderLikes(e,t.likes,!1)})).catch((function(e){console.log(e)})):F.makeLike(this.getCardId()).then((function(t){return n.renderLikes(e,t.likes,!0)})).catch((function(e){console.log(e)}))}function $(e){return e.template="#card",e.handleCardClick=function(e){return N.open(e)},e.handleCardDelete=Y,e.handleLikeButton=Z,e.currentId=K.getUserInfo().id,new r(e).generateCard()}Q.enableValidation(),W.enableValidation(),new s(x,V).enableValidation();var ee=new c({items:[],renderer:$},".cards");X(),F.getInitialCards().then((function(e){var t=[];e.forEach((function(e){t.push({name:e.name,link:e.link,likesArray:e.likes,ownerId:e.owner._id,cardId:e._id})})),(ee=new c({items:t,renderer:$},".cards")).renderer()})).catch((function(e){console.log(e)})),R.addEventListener("click",(function(){H.open(),H.setInputValues(K.getUserInfo()),Q.resetFormValidation()})),D.addEventListener("click",(function(){z.open(),W.resetFormValidation()})),A.addEventListener("click",(function(){G.open()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,